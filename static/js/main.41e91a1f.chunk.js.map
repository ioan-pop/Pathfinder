{"version":3,"sources":["Components/Grid/Grid.module.css","Components/Grid/Grid.js","Components/Wrapper/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","grid","state","searchAlgorithm","startSquare","endSquare","mouseDown","searchStack","searchInterval","undefined","algorithmFunctions","searchNextSquare","breadthFirstSearchNextSquare","bind","i","row","j","props","columns","push","x","y","setState","prevState","this","rows","$","mousedown","mouseup","square","currentGrid","wallSquare","additionalStyles","styles","StartSquare","EndSquare","WallSquare","pathSquare","PathSquare","searchedSquare","SearchedSquare","Square","searchedFrom","setInterval","splice","currentSquare","searchSquare","length","clearInterval","buildFastestPath","path","endPath","markSquareForPath","event","_","camelCase","target","value","depthFirstSearchNextSquare","console","log","map","index","key","className","Row","column","getClassName","onClick","selectSquare","onMouseEnter","style","height","squareHeight","width","squareWidth","Fragment","Menu","margin","onChange","searchAlgorithmChange","disabled","startSearch","marginTop","id","Grid","Component","wrapper","calculatedCells","calculateCells","window","resize","wWidth","wHeight","ratio","Math","floor","App","Wrapper","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41e91a1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Grid_Menu__17n1H\",\"Grid\":\"Grid_Grid__3T6sz\",\"Row\":\"Grid_Row__1emuE\",\"Square\":\"Grid_Square__3p_Gc\",\"StartSquare\":\"Grid_StartSquare__3uz-B\",\"EndSquare\":\"Grid_EndSquare__3ek2-\",\"WallSquare\":\"Grid_WallSquare__2iAa0\",\"SearchedSquare\":\"Grid_SearchedSquare__1_OxM\",\"PathSquare\":\"Grid_PathSquare__3t6mS\"};","import React, {Component} from 'react';\nimport styles from './Grid.module.css';\nimport _ from 'lodash';\nimport $ from 'jquery';\n\nclass grid extends Component {\n    state = {\n        searchAlgorithm: 'breadthFirst',\n        grid: [],\n        startSquare: null,\n        endSquare: null,\n        mouseDown: false\n    };\n\n    searchStack = [];\n    searchInterval = undefined;\n\n    algorithmFunctions = {\n        searchNextSquare: this.breadthFirstSearchNextSquare.bind(this)\n    };\n\n    componentDidMount() {\n        for(let i = 0; i < this.props.rows; i++) {\n            let row = [];\n\n            for(let j = 0; j < this.props.columns; j++) {\n                row.push({x: j, y: i});\n            }\n\n            this.setState(prevState => ({\n                grid: [...prevState.grid, row]\n            }));\n        }\n\n        $('#grid').mousedown(() => {\n            this.setState({mouseDown: true});\n        });\n\n        $('#grid').mouseup(() => {\n            this.setState({mouseDown: false});\n        });\n    }\n\n    selectSquare(square) {\n        let currentGrid = [...this.state.grid];\n\n        if(!this.state.startSquare) {\n            currentGrid[square.y][square.x].startSquare = true;\n            this.setState({startSquare: square});\n        } else if (!this.state.endSquare) {\n            currentGrid[square.y][square.x].endSquare = true;\n            this.setState({endSquare: square});\n        } else {\n            currentGrid[square.y][square.x].wallSquare = true;\n        }\n\n        this.setState({grid: currentGrid});\n    }\n\n    getClassName(square) {\n        let additionalStyles = '';\n\n        if (square.startSquare) {\n            additionalStyles = ' ' + styles.StartSquare;\n        } else if (square.endSquare) {\n            additionalStyles = ' ' + styles.EndSquare;\n        } else if (square.wallSquare) {\n            additionalStyles = ' ' + styles.WallSquare;\n        } else if (square.pathSquare) {\n            additionalStyles = ' ' + styles.PathSquare;\n        } else if (square.searchedSquare) {\n            additionalStyles = ' ' + styles.SearchedSquare;\n        }\n\n        return styles.Square + additionalStyles;\n    }\n\n    searchSquare(x, y, searchedFrom) {\n        if(this.state.endSquare.x === x && this.state.endSquare.y === y) {\n            this.setState({endSquare: {...this.state.endSquare, searchedFrom}});\n            return true;\n        } else if (this.state.grid[y][x].searchedSquare || this.state.grid[y][x].startSquare || this.state.grid[y][x].wallSquare) {\n            return false\n        } else {\n            let currentGrid = [...this.state.grid];\n            \n            currentGrid[y][x].searchedSquare = true;\n            currentGrid[y][x].searchedFrom = searchedFrom;\n            this.searchStack.push({x, y});\n\n            this.setState({grid: currentGrid});\n    \n            return false;\n        }\n    }\n\n    startSearch() {\n        this.searchStack.push({x: this.state.startSquare.x, y: this.state.startSquare.y});\n        \n        this.searchInterval = setInterval(() => {\n            this.searchNextSquare();\n            this.searchStack.splice(0,1);\n        }, 10);\n    }\n\n    breadthFirstSearchNextSquare(currentSquare) {\n        let endFound = (currentSquare.y > 0 ? this.searchSquare(currentSquare.x, currentSquare.y - 1, currentSquare) : false) ||\n            (currentSquare.x < this.state.grid[0].length - 1 ? this.searchSquare(currentSquare.x + 1, currentSquare.y, currentSquare) : false) ||\n            (currentSquare.y < this.state.grid.length - 1 ? this.searchSquare(currentSquare.x, currentSquare.y + 1, currentSquare) : false) ||\n            (currentSquare.x > 0 ? this.searchSquare(currentSquare.x - 1, currentSquare.y, currentSquare) : false);\n\n        return endFound;\n    }\n\n    depthFirstSearchNextSquare() {\n\n    }\n\n    searchNextSquare() {\n        let currentSquare = this.state.grid[this.searchStack[0].y][this.searchStack[0].x];\n        let endFound = false;\n        \n        endFound = this.algorithmFunctions.searchNextSquare(currentSquare);\n\n        if (endFound) {\n            clearInterval(this.searchInterval);\n            this.buildFastestPath();\n        }\n        \n    }\n\n    buildFastestPath() {\n        let path = [];\n        let endPath = false;\n\n        let searchedFrom = this.state.endSquare.searchedFrom;\n\n        while(!endPath) {\n            path.push(searchedFrom);\n            if(searchedFrom.searchedFrom === undefined) {\n                endPath = true;\n            } else {\n                searchedFrom = searchedFrom.searchedFrom;\n            }\n        }\n\n        for(let i = 0; i < path.length; i++) {\n            this.markSquareForPath(path[i].x, path[i].y);\n        }\n    }\n\n    markSquareForPath(x, y) {\n        let currentGrid = [...this.state.grid];\n        \n        currentGrid[y][x].pathSquare = true;\n\n        this.setState({grid: currentGrid});\n    }\n\n    searchAlgorithmChange(event) {\n        switch (_.camelCase(event.target.value)) {\n            case 'breadthFirst':\n                this.algorithmFunctions.searchNextSquare = this.breadthFirstSearchNextSquare.bind(this);\n                break;\n            case 'depthFirst':\n                this.algorithmFunctions.searchNextSquare = this.depthFirstSearchNextSquare.bind(this);\n                break;\n            default:\n                console.log('Error: No algorithm selected');\n                break;\n        };\n    }\n\n    render() {\n        let grid = this.state.grid.map((row, index) => {\n            return (\n                <div key={index} className={styles.Row}>\n                    {\n                        row.map((column, index) => {\n                            return (\n                                <span \n                                    key={index} \n                                    className={this.getClassName(column)} \n                                    onClick={() => {this.selectSquare(column)}}\n                                    onMouseEnter={() => this.state.mouseDown ? this.selectSquare(column) : null}\n                                    style={{height: this.props.squareHeight + \"px\", width: this.props.squareWidth + \"px\"}}>\n                                    {/* {column.x} {column.y} */}\n                                </span>\n                            );\n                        })\n                    }\n                </div>\n            );\n        });\n\n        return(\n            <React.Fragment>\n                <div className={styles.Menu}>\n                    <div style={{margin: \"5px\"}}>\n                        <div>\n                            <div>Algorithm</div>\n                            <div>\n                                <select onChange={this.searchAlgorithmChange}>\n                                    <option>Breadth First</option>\n                                    <option>Depth First</option>\n                                </select>\n                            </div>\n                        </div>\n                        <button \n                            disabled={!this.state.startSquare || !this.state.endSquare} \n                            onClick={() => {this.startSearch()}}\n                            style={{marginTop: \"20px\"}}>\n                            Start\n                        </button>\n                    </div>\n                </div>\n                <div id=\"grid\" className={styles.Grid}>\n                    {grid}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default grid;","import React, { Component } from 'react';\nimport Grid from '../Grid/Grid';\nimport $ from 'jquery';\n\nclass wrapper extends Component {\n    state = {\n        calculatedCells: false\n    }\n\n    componentDidMount() {\n        this.calculateCells();\n\n        $(window).resize(() => {\n            this.setState({calculatedCells: false});\n            this.calculateCells();\n        });\n    }\n\n    calculateCells() {\n        let rows = 0;\n        let columns = 0;\n        let wWidth = $(window).width();\n        let wHeight = $(window).height();\n        let ratio = wWidth/wHeight;\n\n        if (wWidth > 2000) {\n            columns = 40;\n        } else if (wWidth > 1000) {\n            columns = 30;\n        } else {\n            columns = 10;\n        }\n\n        rows = Math.floor(columns / ratio);\n\n        this.setState({\n            calculatedCells: true,\n            rows,\n            columns,\n            squareWidth: wWidth / columns,\n            squareHeight: (wHeight / rows)\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                {\n                    this.state.calculatedCells ?\n                    (<Grid rows={this.state.rows} columns={this.state.columns} squareWidth={this.state.squareWidth} squareHeight={this.state.squareHeight}/>) :\n                    <div>Calculating best size</div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default wrapper;\n","import React from 'react';\nimport './App.css';\nimport Wrapper from './Components/Wrapper/Wrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}